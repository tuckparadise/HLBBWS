/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     EmailValidationApiRequestErrorDetails
    /// </summary>
    [DataContract(Name = "EmailValidationApiRequestErrorDetails")]
    public class EmailValidationApiRequestErrorDetails : IEquatable<EmailValidationApiRequestErrorDetails>
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="EmailValidationApiRequestErrorDetails" /> class.
        /// </summary>
        /// <param name="messageId">Identifier of the error..</param>
        /// <param name="text">Detailed error description..</param>
        /// <param name="validationErrors">Map of validation errors.</param>
        public EmailValidationApiRequestErrorDetails(string messageId = default(string), string text = default(string),
            Dictionary<string, List<string>> validationErrors = default(Dictionary<string, List<string>>))
        {
            MessageId = messageId;
            Text = text;
            ValidationErrors = validationErrors;
        }

        /// <summary>
        ///     Identifier of the error.
        /// </summary>
        /// <value>Identifier of the error.</value>
        [DataMember(Name = "messageId", EmitDefaultValue = false)]
        public string MessageId { get; set; }

        /// <summary>
        ///     Detailed error description.
        /// </summary>
        /// <value>Detailed error description.</value>
        [DataMember(Name = "text", EmitDefaultValue = false)]
        public string Text { get; set; }

        /// <summary>
        ///     Map of validation errors
        /// </summary>
        /// <value>Map of validation errors</value>
        [DataMember(Name = "validationErrors", EmitDefaultValue = false)]
        public Dictionary<string, List<string>> ValidationErrors { get; set; }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EmailValidationApiRequestErrorDetails {\n");
            sb.Append("  MessageId: ").Append(MessageId).Append("\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  ValidationErrors: ").Append(ValidationErrors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as EmailValidationApiRequestErrorDetails);
        }

        /// <summary>
        ///     Returns true if EmailValidationApiRequestErrorDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of EmailValidationApiRequestErrorDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EmailValidationApiRequestErrorDetails input)
        {
            if (input == null)
                return false;

            return
                (
                    MessageId == input.MessageId ||
                    MessageId != null &&
                    MessageId.Equals(input.MessageId)
                ) &&
                (
                    Text == input.Text ||
                    Text != null &&
                    Text.Equals(input.Text)
                ) &&
                (
                    ValidationErrors == input.ValidationErrors ||
                    ValidationErrors != null &&
                    input.ValidationErrors != null &&
                    ValidationErrors.SequenceEqual(input.ValidationErrors)
                );
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (MessageId != null)
                    hashCode = hashCode * 59 + MessageId.GetHashCode();
                if (Text != null)
                    hashCode = hashCode * 59 + Text.GetHashCode();
                if (ValidationErrors != null)
                    hashCode = hashCode * 59 + ValidationErrors.GetHashCode();
                return hashCode;
            }
        }
    }
}